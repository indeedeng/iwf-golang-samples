// Code generated by MockGen. DO NOT EDIT.
// Source: workflows/service/my_service.go

// Package service is a generated GoMock package.
package service

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMyService is a mock of MyService interface.
type MockMyService struct {
	ctrl     *gomock.Controller
	recorder *MockMyServiceMockRecorder
}

// MockMyServiceMockRecorder is the mock recorder for MockMyService.
type MockMyServiceMockRecorder struct {
	mock *MockMyService
}

// NewMockMyService creates a new mock instance.
func NewMockMyService(ctrl *gomock.Controller) *MockMyService {
	mock := &MockMyService{ctrl: ctrl}
	mock.recorder = &MockMyServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMyService) EXPECT() *MockMyServiceMockRecorder {
	return m.recorder
}

// ChargeUser mocks base method.
func (m *MockMyService) ChargeUser(email, customerId string, amount int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ChargeUser", email, customerId, amount)
}

// ChargeUser indicates an expected call of ChargeUser.
func (mr *MockMyServiceMockRecorder) ChargeUser(email, customerId, amount interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ChargeUser", reflect.TypeOf((*MockMyService)(nil).ChargeUser), email, customerId, amount)
}

// SendEmail mocks base method.
func (m *MockMyService) SendEmail(recipient, subject, content string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SendEmail", recipient, subject, content)
}

// SendEmail indicates an expected call of SendEmail.
func (mr *MockMyServiceMockRecorder) SendEmail(recipient, subject, content interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendEmail", reflect.TypeOf((*MockMyService)(nil).SendEmail), recipient, subject, content)
}

// UpdateExternalSystem mocks base method.
func (m *MockMyService) UpdateExternalSystem(message string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UpdateExternalSystem", message)
}

// UpdateExternalSystem indicates an expected call of UpdateExternalSystem.
func (mr *MockMyServiceMockRecorder) UpdateExternalSystem(message interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateExternalSystem", reflect.TypeOf((*MockMyService)(nil).UpdateExternalSystem), message)
}
